name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache target directory
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: |
        echo "=== Running full test suite with verbose output ==="
        echo "Environment: $(uname -a)"
        echo "Rust: $(rustc --version)"
        echo "libxml2: $(pkg-config --modversion libxml-2.0 || echo 'not found via pkg-config')"
        echo ""

        # Run tests with full backtrace and verbose output
        RUST_BACKTRACE=full cargo test --all-features --verbose 2>&1 | tee test-output.log
        EXIT_CODE=${PIPESTATUS[0]}

        echo ""
        echo "=== Test suite exit code: $EXIT_CODE ==="

        if [ $EXIT_CODE -ne 0 ]; then
          echo "=== Tests failed or crashed ==="
          echo "Last 50 lines of output:"
          tail -50 test-output.log
        fi

        exit $EXIT_CODE

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt

    - name: Check formatting
      run: cargo fmt --all -- --check
